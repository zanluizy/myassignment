{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Symbol;\nexports.symbolsStroke = exports.symbolsFill = void 0;\nvar _index = require(\"../../../lib-vendor/d3-path/src/index.js\");\nvar _constant = _interopRequireDefault(require(\"./constant.js\"));\nvar _asterisk = _interopRequireDefault(require(\"./symbol/asterisk.js\"));\nvar _circle = _interopRequireDefault(require(\"./symbol/circle.js\"));\nvar _cross = _interopRequireDefault(require(\"./symbol/cross.js\"));\nvar _diamond = _interopRequireDefault(require(\"./symbol/diamond.js\"));\nvar _diamond2 = _interopRequireDefault(require(\"./symbol/diamond2.js\"));\nvar _plus = _interopRequireDefault(require(\"./symbol/plus.js\"));\nvar _square = _interopRequireDefault(require(\"./symbol/square.js\"));\nvar _square2 = _interopRequireDefault(require(\"./symbol/square2.js\"));\nvar _star = _interopRequireDefault(require(\"./symbol/star.js\"));\nvar _triangle = _interopRequireDefault(require(\"./symbol/triangle.js\"));\nvar _triangle2 = _interopRequireDefault(require(\"./symbol/triangle2.js\"));\nvar _wye = _interopRequireDefault(require(\"./symbol/wye.js\"));\nvar _x = _interopRequireDefault(require(\"./symbol/x.js\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n// These symbols are designed to be filled.\nconst symbolsFill = [_circle.default, _cross.default, _diamond.default, _square.default, _star.default, _triangle.default, _wye.default]; // These symbols are designed to be stroked (with a width of 1.5px and round caps).\n\nexports.symbolsFill = symbolsFill;\nconst symbolsStroke = [_circle.default, _plus.default, _x.default, _triangle2.default, _asterisk.default, _square2.default, _diamond2.default];\nexports.symbolsStroke = symbolsStroke;\nfunction Symbol(type, size) {\n  let context = null;\n  type = typeof type === \"function\" ? type : (0, _constant.default)(type || _circle.default);\n  size = typeof size === \"function\" ? size : (0, _constant.default)(size === undefined ? 64 : +size);\n  function symbol() {\n    let buffer;\n    if (!context) context = buffer = (0, _index.path)();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n  symbol.type = function (_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : (0, _constant.default)(_), symbol) : type;\n  };\n  symbol.size = function (_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : (0, _constant.default)(+_), symbol) : size;\n  };\n  symbol.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n  return symbol;\n}","map":null,"metadata":{},"sourceType":"script"}