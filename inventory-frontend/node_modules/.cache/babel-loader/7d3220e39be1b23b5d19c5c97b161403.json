{"ast":null,"code":"var _excluded = [\"cx\", \"cy\", \"angle\", \"ticks\", \"axisLine\"],\n  _excluded2 = [\"ticks\", \"tick\", \"angle\", \"tickFormatter\", \"stroke\"];\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  for (var key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _callSuper(t, o, e) {\n  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n/**\n * @fileOverview The axis of polar coordinate system\n */\nimport React, { PureComponent } from 'react';\nimport maxBy from 'lodash/maxBy';\nimport minBy from 'lodash/minBy';\nimport isFunction from 'lodash/isFunction';\nimport clsx from 'clsx';\nimport { Text } from '../component/Text';\nimport { Label } from '../component/Label';\nimport { Layer } from '../container/Layer';\nimport { getTickClassName, polarToCartesian } from '../util/PolarUtils';\nimport { adaptEventsOfChild } from '../util/types';\nimport { filterProps } from '../util/ReactUtils';\nexport var PolarRadiusAxis = /*#__PURE__*/function (_PureComponent) {\n  function PolarRadiusAxis() {\n    _classCallCheck(this, PolarRadiusAxis);\n    return _callSuper(this, PolarRadiusAxis, arguments);\n  }\n  _inherits(PolarRadiusAxis, _PureComponent);\n  return _createClass(PolarRadiusAxis, [{\n    key: \"getTickValueCoord\",\n    value:\n    /**\n     * Calculate the coordinate of tick\n     * @param  {Number} coordinate The radius of tick\n     * @return {Object} (x, y)\n     */\n    function getTickValueCoord(_ref) {\n      var coordinate = _ref.coordinate;\n      var _this$props = this.props,\n        angle = _this$props.angle,\n        cx = _this$props.cx,\n        cy = _this$props.cy;\n      return polarToCartesian(cx, cy, coordinate, angle);\n    }\n  }, {\n    key: \"getTickTextAnchor\",\n    value: function getTickTextAnchor() {\n      var orientation = this.props.orientation;\n      var textAnchor;\n      switch (orientation) {\n        case 'left':\n          textAnchor = 'end';\n          break;\n        case 'right':\n          textAnchor = 'start';\n          break;\n        default:\n          textAnchor = 'middle';\n          break;\n      }\n      return textAnchor;\n    }\n  }, {\n    key: \"getViewBox\",\n    value: function getViewBox() {\n      var _this$props2 = this.props,\n        cx = _this$props2.cx,\n        cy = _this$props2.cy,\n        angle = _this$props2.angle,\n        ticks = _this$props2.ticks;\n      var maxRadiusTick = maxBy(ticks, function (entry) {\n        return entry.coordinate || 0;\n      });\n      var minRadiusTick = minBy(ticks, function (entry) {\n        return entry.coordinate || 0;\n      });\n      return {\n        cx: cx,\n        cy: cy,\n        startAngle: angle,\n        endAngle: angle,\n        innerRadius: minRadiusTick.coordinate || 0,\n        outerRadius: maxRadiusTick.coordinate || 0\n      };\n    }\n  }, {\n    key: \"renderAxisLine\",\n    value: function renderAxisLine() {\n      var _this$props3 = this.props,\n        cx = _this$props3.cx,\n        cy = _this$props3.cy,\n        angle = _this$props3.angle,\n        ticks = _this$props3.ticks,\n        axisLine = _this$props3.axisLine,\n        others = _objectWithoutProperties(_this$props3, _excluded);\n      var extent = ticks.reduce(function (result, entry) {\n        return [Math.min(result[0], entry.coordinate), Math.max(result[1], entry.coordinate)];\n      }, [Infinity, -Infinity]);\n      var point0 = polarToCartesian(cx, cy, extent[0], angle);\n      var point1 = polarToCartesian(cx, cy, extent[1], angle);\n      var props = _objectSpread(_objectSpread(_objectSpread({}, filterProps(others, false)), {}, {\n        fill: 'none'\n      }, filterProps(axisLine, false)), {}, {\n        x1: point0.x,\n        y1: point0.y,\n        x2: point1.x,\n        y2: point1.y\n      });\n      return /*#__PURE__*/React.createElement(\"line\", _extends({\n        className: \"recharts-polar-radius-axis-line\"\n      }, props));\n    }\n  }, {\n    key: \"renderTicks\",\n    value: function renderTicks() {\n      var _this = this;\n      var _this$props4 = this.props,\n        ticks = _this$props4.ticks,\n        tick = _this$props4.tick,\n        angle = _this$props4.angle,\n        tickFormatter = _this$props4.tickFormatter,\n        stroke = _this$props4.stroke,\n        others = _objectWithoutProperties(_this$props4, _excluded2);\n      var textAnchor = this.getTickTextAnchor();\n      var axisProps = filterProps(others, false);\n      var customTickProps = filterProps(tick, false);\n      var items = ticks.map(function (entry, i) {\n        var coord = _this.getTickValueCoord(entry);\n        var tickProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n          textAnchor: textAnchor,\n          transform: \"rotate(\".concat(90 - angle, \", \").concat(coord.x, \", \").concat(coord.y, \")\")\n        }, axisProps), {}, {\n          stroke: 'none',\n          fill: stroke\n        }, customTickProps), {}, {\n          index: i\n        }, coord), {}, {\n          payload: entry\n        });\n        return /*#__PURE__*/React.createElement(Layer, _extends({\n          className: clsx('recharts-polar-radius-axis-tick', getTickClassName(tick)),\n          key: \"tick-\".concat(entry.coordinate)\n        }, adaptEventsOfChild(_this.props, entry, i)), PolarRadiusAxis.renderTickItem(tick, tickProps, tickFormatter ? tickFormatter(entry.value, i) : entry.value));\n      });\n      return /*#__PURE__*/React.createElement(Layer, {\n        className: \"recharts-polar-radius-axis-ticks\"\n      }, items);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n        ticks = _this$props5.ticks,\n        axisLine = _this$props5.axisLine,\n        tick = _this$props5.tick;\n      if (!ticks || !ticks.length) {\n        return null;\n      }\n      return /*#__PURE__*/React.createElement(Layer, {\n        className: clsx('recharts-polar-radius-axis', this.props.className)\n      }, axisLine && this.renderAxisLine(), tick && this.renderTicks(), Label.renderCallByParent(this.props, this.getViewBox()));\n    }\n  }], [{\n    key: \"renderTickItem\",\n    value: function renderTickItem(option, props, value) {\n      var tickItem;\n      if (/*#__PURE__*/React.isValidElement(option)) {\n        tickItem = /*#__PURE__*/React.cloneElement(option, props);\n      } else if (isFunction(option)) {\n        tickItem = option(props);\n      } else {\n        tickItem = /*#__PURE__*/React.createElement(Text, _extends({}, props, {\n          className: \"recharts-polar-radius-axis-tick-value\"\n        }), value);\n      }\n      return tickItem;\n    }\n  }]);\n}(PureComponent);\n_defineProperty(PolarRadiusAxis, \"displayName\", 'PolarRadiusAxis');\n_defineProperty(PolarRadiusAxis, \"axisType\", 'radiusAxis');\n_defineProperty(PolarRadiusAxis, \"defaultProps\", {\n  type: 'number',\n  radiusAxisId: 0,\n  cx: 0,\n  cy: 0,\n  angle: 0,\n  orientation: 'right',\n  stroke: '#ccc',\n  axisLine: true,\n  tick: true,\n  tickCount: 5,\n  allowDataOverflow: false,\n  scale: 'auto',\n  allowDuplicatedCategory: true\n});","map":null,"metadata":{},"sourceType":"module"}