{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nvar _index = require(\"../../../lib-vendor/d3-path/src/index.js\");\nvar _array = _interopRequireDefault(require(\"./array.js\"));\nvar _constant = _interopRequireDefault(require(\"./constant.js\"));\nvar _linear = _interopRequireDefault(require(\"./curve/linear.js\"));\nvar _line = _interopRequireDefault(require(\"./line.js\"));\nvar _point = require(\"./point.js\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _default(x0, y0, y1) {\n  var x1 = null,\n    defined = (0, _constant.default)(true),\n    context = null,\n    curve = _linear.default,\n    output = null;\n  x0 = typeof x0 === \"function\" ? x0 : x0 === undefined ? _point.x : (0, _constant.default)(+x0);\n  y0 = typeof y0 === \"function\" ? y0 : y0 === undefined ? (0, _constant.default)(0) : (0, _constant.default)(+y0);\n  y1 = typeof y1 === \"function\" ? y1 : y1 === undefined ? _point.y : (0, _constant.default)(+y1);\n  function area(data) {\n    var i,\n      j,\n      k,\n      n = (data = (0, _array.default)(data)).length,\n      d,\n      defined0 = false,\n      buffer,\n      x0z = new Array(n),\n      y0z = new Array(n);\n    if (context == null) output = curve(buffer = (0, _index.path)());\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n  function arealine() {\n    return (0, _line.default)().defined(defined).curve(curve).context(context);\n  }\n  area.x = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : (0, _constant.default)(+_), x1 = null, area) : x0;\n  };\n  area.x0 = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : (0, _constant.default)(+_), area) : x0;\n  };\n  area.x1 = function (_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : (0, _constant.default)(+_), area) : x1;\n  };\n  area.y = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : (0, _constant.default)(+_), y1 = null, area) : y0;\n  };\n  area.y0 = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : (0, _constant.default)(+_), area) : y0;\n  };\n  area.y1 = function (_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : (0, _constant.default)(+_), area) : y1;\n  };\n  area.lineX0 = area.lineY0 = function () {\n    return arealine().x(x0).y(y0);\n  };\n  area.lineY1 = function () {\n    return arealine().x(x0).y(y1);\n  };\n  area.lineX1 = function () {\n    return arealine().x(x1).y(y0);\n  };\n  area.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : (0, _constant.default)(!!_), area) : defined;\n  };\n  area.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n  area.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n  return area;\n}","map":null,"metadata":{},"sourceType":"script"}