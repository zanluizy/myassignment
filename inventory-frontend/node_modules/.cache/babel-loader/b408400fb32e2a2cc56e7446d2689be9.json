{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.link = link;\nexports.linkHorizontal = linkHorizontal;\nexports.linkRadial = linkRadial;\nexports.linkVertical = linkVertical;\nvar _index = require(\"../../../lib-vendor/d3-path/src/index.js\");\nvar _array = require(\"./array.js\");\nvar _constant = _interopRequireDefault(require(\"./constant.js\"));\nvar _bump = require(\"./curve/bump.js\");\nvar _point = require(\"./point.js\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction linkSource(d) {\n  return d.source;\n}\nfunction linkTarget(d) {\n  return d.target;\n}\nfunction link(curve) {\n  let source = linkSource;\n  let target = linkTarget;\n  let x = _point.x;\n  let y = _point.y;\n  let context = null;\n  let output = null;\n  function link() {\n    let buffer;\n    const argv = _array.slice.call(arguments);\n    const s = source.apply(this, argv);\n    const t = target.apply(this, argv);\n    if (context == null) output = curve(buffer = (0, _index.path)());\n    output.lineStart();\n    argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    output.lineEnd();\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n  link.source = function (_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n  link.target = function (_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n  link.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : (0, _constant.default)(+_), link) : x;\n  };\n  link.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : (0, _constant.default)(+_), link) : y;\n  };\n  link.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link) : context;\n  };\n  return link;\n}\nfunction linkHorizontal() {\n  return link(_bump.bumpX);\n}\nfunction linkVertical() {\n  return link(_bump.bumpY);\n}\nfunction linkRadial() {\n  const l = link(_bump.bumpRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}","map":null,"metadata":{},"sourceType":"script"}