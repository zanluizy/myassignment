{"ast":null,"code":"var _excluded = [\"points\", \"className\", \"baseLinePoints\", \"connectNulls\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  for (var key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n/**\n * @fileOverview Polygon\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport { filterProps } from '../util/ReactUtils';\nvar isValidatePoint = function isValidatePoint(point) {\n  return point && point.x === +point.x && point.y === +point.y;\n};\nvar getParsedPoints = function getParsedPoints() {\n  var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var segmentPoints = [[]];\n  points.forEach(function (entry) {\n    if (isValidatePoint(entry)) {\n      segmentPoints[segmentPoints.length - 1].push(entry);\n    } else if (segmentPoints[segmentPoints.length - 1].length > 0) {\n      // add another path\n      segmentPoints.push([]);\n    }\n  });\n  if (isValidatePoint(points[0])) {\n    segmentPoints[segmentPoints.length - 1].push(points[0]);\n  }\n  if (segmentPoints[segmentPoints.length - 1].length <= 0) {\n    segmentPoints = segmentPoints.slice(0, -1);\n  }\n  return segmentPoints;\n};\nvar getSinglePolygonPath = function getSinglePolygonPath(points, connectNulls) {\n  var segmentPoints = getParsedPoints(points);\n  if (connectNulls) {\n    segmentPoints = [segmentPoints.reduce(function (res, segPoints) {\n      return [].concat(_toConsumableArray(res), _toConsumableArray(segPoints));\n    }, [])];\n  }\n  var polygonPath = segmentPoints.map(function (segPoints) {\n    return segPoints.reduce(function (path, point, index) {\n      return \"\".concat(path).concat(index === 0 ? 'M' : 'L').concat(point.x, \",\").concat(point.y);\n    }, '');\n  }).join('');\n  return segmentPoints.length === 1 ? \"\".concat(polygonPath, \"Z\") : polygonPath;\n};\nvar getRanglePath = function getRanglePath(points, baseLinePoints, connectNulls) {\n  var outerPath = getSinglePolygonPath(points, connectNulls);\n  return \"\".concat(outerPath.slice(-1) === 'Z' ? outerPath.slice(0, -1) : outerPath, \"L\").concat(getSinglePolygonPath(baseLinePoints.reverse(), connectNulls).slice(1));\n};\nexport var Polygon = function Polygon(props) {\n  var points = props.points,\n    className = props.className,\n    baseLinePoints = props.baseLinePoints,\n    connectNulls = props.connectNulls,\n    others = _objectWithoutProperties(props, _excluded);\n  if (!points || !points.length) {\n    return null;\n  }\n  var layerClass = clsx('recharts-polygon', className);\n  if (baseLinePoints && baseLinePoints.length) {\n    var hasStroke = others.stroke && others.stroke !== 'none';\n    var rangePath = getRanglePath(points, baseLinePoints, connectNulls);\n    return /*#__PURE__*/React.createElement(\"g\", {\n      className: layerClass\n    }, /*#__PURE__*/React.createElement(\"path\", _extends({}, filterProps(others, true), {\n      fill: rangePath.slice(-1) === 'Z' ? others.fill : 'none',\n      stroke: \"none\",\n      d: rangePath\n    })), hasStroke ? /*#__PURE__*/React.createElement(\"path\", _extends({}, filterProps(others, true), {\n      fill: \"none\",\n      d: getSinglePolygonPath(points, connectNulls)\n    })) : null, hasStroke ? /*#__PURE__*/React.createElement(\"path\", _extends({}, filterProps(others, true), {\n      fill: \"none\",\n      d: getSinglePolygonPath(baseLinePoints, connectNulls)\n    })) : null);\n  }\n  var singlePath = getSinglePolygonPath(points, connectNulls);\n  return /*#__PURE__*/React.createElement(\"path\", _extends({}, filterProps(others, true), {\n    fill: singlePath.slice(-1) === 'Z' ? others.fill : 'none',\n    className: layerClass,\n    d: singlePath\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}