{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nvar _array = _interopRequireDefault(require(\"./array.js\"));\nvar _constant = _interopRequireDefault(require(\"./constant.js\"));\nvar _descending = _interopRequireDefault(require(\"./descending.js\"));\nvar _identity = _interopRequireDefault(require(\"./identity.js\"));\nvar _math = require(\"./math.js\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _default() {\n  var value = _identity.default,\n    sortValues = _descending.default,\n    sort = null,\n    startAngle = (0, _constant.default)(0),\n    endAngle = (0, _constant.default)(_math.tau),\n    padAngle = (0, _constant.default)(0);\n  function pie(data) {\n    var i,\n      n = (data = (0, _array.default)(data)).length,\n      j,\n      k,\n      sum = 0,\n      index = new Array(n),\n      arcs = new Array(n),\n      a0 = +startAngle.apply(this, arguments),\n      da = Math.min(_math.tau, Math.max(-_math.tau, endAngle.apply(this, arguments) - a0)),\n      a1,\n      p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n      pa = p * (da < 0 ? -1 : 1),\n      v;\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    } // Optionally sort the arcs by previously-computed values or by data.\n\n    if (sortValues != null) index.sort(function (i, j) {\n      return sortValues(arcs[i], arcs[j]);\n    });else if (sort != null) index.sort(function (i, j) {\n      return sort(data[i], data[j]);\n    }); // Compute the arcs! They are stored in the original data's order.\n\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n    return arcs;\n  }\n  pie.value = function (_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : (0, _constant.default)(+_), pie) : value;\n  };\n  pie.sortValues = function (_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n  pie.sort = function (_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n  pie.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : (0, _constant.default)(+_), pie) : startAngle;\n  };\n  pie.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : (0, _constant.default)(+_), pie) : endAngle;\n  };\n  pie.padAngle = function (_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : (0, _constant.default)(+_), pie) : padAngle;\n  };\n  return pie;\n}","map":null,"metadata":{},"sourceType":"script"}